The Powerunit framework

* Main concepts

 Powerunit is a unit test framework designed to be used with the JDK 1.8. It is inspired by the JUnit framework and
 syntax is very similar. from a high level perspective, the main difference are :
 
 * The is no concept of test runner, but the concept of parameterized test is integrated into the default system.

 * The is no before/after annotation, but the action around a test are defined by using one single rule chain.

 * Assertion syntax is more DSL oriented (only assertThat or similair assertion is available). The assertion system 
 is strongly linked with hamcrest.
 
 * Some additional matcher are available to support new capabilities of the JDK 1.8, for instance the Optional class.
 
 {{{./apidocs/index.html}Much more details are available in the javadoc of this project}}
 
* Hosting

 The source is hosted on {{{https://github.com/powerunit/powerunit/}git}}, as is the
 {{{https://github.com/powerunit/powerunit/issues}issue manager}}. 
 
* Maven integration

 At the moment, is framework is not available in the maven central repo. Assuming this will be done at some point (for the
 first release), it will be possible do use this framework as any maven dependency :
 
+--
<dependency>
 <groupId>org.powerunit</groupId>
 <artifactId>powerunit</artifactId>
 <scope>test</scope>
</dependency>
+--
 
 Integration with surefire is also possible. To do so, the dependency must also be added to the extension of the surefire plugin:
 
+--
<plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-surefire-plugin</artifactId>
  <dependencies>
    <dependency>
      <groupId>org.powerunit</groupId>
      <artifactId>powerunit</artifactId>
    </dependency>
  </dependencies>
</plugin>
+--

* Roadmap

 At the moment, the roadmap is mainly to deliver a first release of the framework, with the central integration. Once this 
 first essential step is done, the next milestones will be defined.
 